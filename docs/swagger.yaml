basePath: /api/v1
definitions:
  forms.EditUser:
    properties:
      address:
        type: string
      avatar:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  forms.Login:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  forms.User:
    properties:
      address:
        type: string
      avatar:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 6
        type: string
      phone_number:
        type: string
      role:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    type: object
  models.User:
    properties:
      address:
        type: string
      avatar:
        type: string
      date_created:
        type: string
      date_updated:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      role:
        type: string
    type: object
  response.ErrorMessage:
    properties:
      code:
        example: 400
        type: integer
      error: {}
      message:
        example: error when fetching
        type: string
      status:
        example: failure
        type: string
    type: object
  response.SuccessMessage:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: fetched successfully
        type: string
      status:
        example: success
        type: string
    type: object
  se.ServiceError:
    properties:
      description:
        type: string
      error:
        type: string
      time:
        type: string
      type:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: bobdence@gmail.com
    name: Confidence James
    url: http://github.com/jamesconfy
  description: Server for {{your server link}}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Project
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Get home details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/se.ServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/se.ServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/se.ServiceError'
      summary: Get home route
      tags:
      - Home
  /auth/clear:
    delete:
      description: Clear user auth
      produces:
      - application/json
      responses:
        "200":
          description: Logged out from all other device successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: Clear Login Auth route
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login route
      parameters:
      - description: Login Details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessMessage'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/se.ServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/se.ServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/se.ServiceError'
      summary: Login route
      tags:
      - Auth
  /auth/logout:
    post:
      description: Logout user
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: Logout user route
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register route
      parameters:
      - description: Signup Details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessMessage'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/se.ServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/se.ServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/se.ServiceError'
      summary: Register route
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: Get all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessMessage'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/se.ServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/se.ServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/se.ServiceError'
      security:
      - ApiKeyAuth: []
      summary: Get all user route
      tags:
      - Users
  /users/{userId}:
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: User id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessMessage'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/se.ServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/se.ServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/se.ServiceError'
      security:
      - ApiKeyAuth: []
      summary: Get user route
      tags:
      - Users
  /users/profile:
    delete:
      description: Delete user
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: Delete user route
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessMessage'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/se.ServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/se.ServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/se.ServiceError'
      security:
      - ApiKeyAuth: []
      summary: Get user profile route
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Edit user in the system
      parameters:
      - description: Edit Details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.EditUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessMessage'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/se.ServiceError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/se.ServiceError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/se.ServiceError'
      security:
      - ApiKeyAuth: []
      summary: Edit user route
      tags:
      - Users
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorisation
    type: apiKey
swagger: "2.0"
