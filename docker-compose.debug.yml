version: "3.9"

services:
  restaurant-management:
    container_name: restaurant_app
    image: everybody8/restaurant-management:v1.0
    env_file:
      - .env.docker
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - sql_net

  postgresdb:
    image: postgres:latest
    container_name: postgres_restaurant
    env_file:
      - .env.docker
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - sql_net

  redisdb:
    image: redis:latest
    container_name: redis_container
    env_file:
      - .env.docker
    volumes:
      - redis:/var/lib/redis/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    networks:
      - sql_net

# Networks to be created to facilitate communication between containers
networks:
  sql_net:

volumes:
  database:
  app:
  redis:
